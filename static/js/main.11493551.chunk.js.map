{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","Text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","replace","split","filter","n","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.11493551.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n            {/* <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/about\">\n                About\n              </a>\n            </li> */}\n          </ul>\n          <div\n            className={`form-check form-switch text-${\n              props.mode === \"light\" ? \"dark\" : \"light\"\n            } `}\n          >\n            <input\n              className=\"form-check-input\"\n              onClick={props.toggleMode}\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label\n              className=\"form-check-label \"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Enable DarkMode\n            </label>\n          </div>\n          {/* <form className=\"d-flex\" role=\"search\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n        </div>\n      </div>\n    </nav>\n  );\n}\nNavbar.propTypes = { title: PropTypes.string };\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was clicked\" + Text);\n    let newText = Text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase!\", \"Success\");\n  };\n  const handleLoClick = () => {\n    // console.log(\"Uppercase was clicked\" + Text);\n    let newText = Text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase!\", \"Success\");\n  };\n  const handleClearClick = () => {\n    // console.log(\"Uppercase was clicked\" + Text);\n    let newText = \"\";\n    setText(newText);\n    props.showAlert(\"Cleared!\", \"Success\");\n  };\n  const handleCopy = () => {\n    let Text = document.getElementById(\"exampleFormControlTextarea1\");\n    Text.select();\n    navigator.clipboard.writeText(Text.value);\n    props.showAlert(\"Copied!\", \"Success\");\n  };\n  const handleExtraSpaces = () => {\n    let newText = Text.replace(/\\s+/g, \" \");\n    setText(newText);\n    props.showAlert(\"Extra spaces removed!\", \"Success\");\n  };\n\n  const handleOnChange = (event) => {\n    // console.log(\"On change\");\n    setText(event.target.value);\n  };\n  const [Text, setText] = useState(\"Enter text here\");\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{\n          color: props.mode === \"dark\" ? \"white\" : \"#08153a\",\n        }}\n      >\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3 \">\n          <textarea\n            className=\"form-control\"\n            value={Text}\n            onChange={handleOnChange}\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"black\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"#08153a\",\n            }}\n            id=\"exampleFormControlTextarea1\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary \" onClick={handleUpClick}>\n          Convert to Uppercase\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\n          Convert to Lowercase\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>\n          Clear Text\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\n          Copy Text\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\n          Remove Extra Spaces\n        </button>\n      </div>\n      <div\n        className=\"container my-3\"\n        style={{\n          color: props.mode === \"dark\" ? \"white\" : \"#08153a\",\n        }}\n      >\n        <h2>Your text summary</h2>{\" \"}\n        <p>\n          {\n            Text.split(\" \").filter(function (n) {\n              return n !== \"\";\n            }).length\n          }{\" \"}\n          words ,{Text.replace(/\\s+/g, \"\").length} characters{\" \"}\n        </p>\n        <p>{0.008 * Text.split(\" \").length} minutes to read</p>\n        <h2>Preview</h2>\n        <p>{Text.length > 0 ? Text : \"Enter something to preview here\"}</p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nfunction Alert(props) {\n  const capitalize = (word) => {\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n  return (\n    props.alert && (\n      <div\n        className=\"alert alert-warning alert-dismissible fade show\"\n        role=\"alert\"\n      >\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n        <button\n          type=\"button\"\n          className=\"btn-close\"\n          data-bs-dismiss=\"alert\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n    )\n  );\n}\n\nexport default Alert;\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#08153a\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <Router> */}\n      <div className=\"container my-3\">\n        {/* <Routes>\n            <Route path=\"/about\" element={<About />} />\n            <Route\n              path=\"/\"\n              element={ */}\n        <TextForm\n          heading=\"Enter text to analyze\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* }\n            />\n          </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}